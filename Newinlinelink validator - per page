(async function() {
  const brokenLinks = [];
  const results = [];

  // ‚úÖ Adjust this selector to exclude navigation (example assumes left nav has a class "left-nav")
  const contentArea = document.querySelector("main") || document.body; 
  const navArea = document.querySelector(".left-nav");

  let anchors = Array.from(contentArea.querySelectorAll("a[href]"));

  // Exclude nav links if navArea exists
  if (navArea) {
    const navLinks = new Set(Array.from(navArea.querySelectorAll("a[href]")).map(a => a.href));
    anchors = anchors.filter(a => !navLinks.has(a.href));
  }

  for (const a of anchors) {
    const url = a.href;
    const text = a.textContent.trim() || "No Text";

    try {
      const res = await fetch(url, { method: "HEAD" });
      results.push({
        link_text: text,
        url: url,
        status: res.status
      });
      if (!res.ok) {
        brokenLinks.push({ link_text: text, url: url, status: res.status });
      }
    } catch (e) {
      results.push({ link_text: text, url: url, status: "Request Failed" });
      brokenLinks.push({ link_text: text, url: url, status: "Request Failed" });
    }
  }

  console.log("‚úÖ All inline links checked on this page.");
  console.table(results);

  if (brokenLinks.length) {
    console.warn("‚ö†Ô∏è Broken links found:");
    console.table(brokenLinks);
  } else {
    console.log("üéâ No broken links found!");
  }
})();
